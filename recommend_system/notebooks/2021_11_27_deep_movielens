{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2021_11_27_deep_movielens","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyP/0pXkgo8ETbcn2F08bVSe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JJt4ytWmOQ7z","executionInfo":{"status":"ok","timestamp":1639189459020,"user_tz":-540,"elapsed":17240,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"8d5e288f-6b34-4193-91ea-8627badc9adc"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"XzwdWHEYOU62","executionInfo":{"status":"ok","timestamp":1639189459020,"user_tz":-540,"elapsed":8,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":["import pandas as pd\n","import numpy as np"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bq7zfaW5OW3W","executionInfo":{"status":"ok","timestamp":1639189459021,"user_tz":-540,"elapsed":7,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":["# about rating\n","path_rating = 'drive/MyDrive/Notebooks/ml-100k/u.data'\n","# about movie\n","path_movie = 'drive/MyDrive/Notebooks/ml-100k/u.item'\n","# about user\n","path_user = 'drive/MyDrive/Notebooks/ml-100k/u.user'"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DCgZD-LIOd1g","executionInfo":{"status":"ok","timestamp":1639189459397,"user_tz":-540,"elapsed":383,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"779a7d02-169d-4fc2-f730-1301d4234c37"},"source":["def parse(s):\n","  seq = s.split(' | ')\n","  return list(map(lambda s: s.replace(' ', '_'), seq))\n","\n","parse('user id | age | gender | occupation | zip code')"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['user_id', 'age', 'gender', 'occupation', 'zip_code']"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"Yr6nQXN9Oehq","executionInfo":{"status":"ok","timestamp":1639189459697,"user_tz":-540,"elapsed":303,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"aa9cf2ba-1875-4bf0-d21d-fa7932c94730"},"source":["user_col = parse('user id | age | gender | occupation | zip code')\n","print(user_col)\n","users = pd.read_csv(path_user, sep='|', names=user_col)\n","users = users.set_index(user_col[0])\n","print(users.shape)\n","display(users.head(5))"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["['user_id', 'age', 'gender', 'occupation', 'zip_code']\n","(943, 4)\n"]},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>occupation</th>\n","      <th>zip_code</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>85711</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>53</td>\n","      <td>F</td>\n","      <td>other</td>\n","      <td>94043</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>writer</td>\n","      <td>32067</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>43537</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","      <td>F</td>\n","      <td>other</td>\n","      <td>15213</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         age gender  occupation zip_code\n","user_id                                 \n","1         24      M  technician    85711\n","2         53      F       other    94043\n","3         23      M      writer    32067\n","4         24      M  technician    43537\n","5         33      F       other    15213"]},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"C8A6DyjuOh0W","executionInfo":{"status":"ok","timestamp":1639189460003,"user_tz":-540,"elapsed":312,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"c76f6f7c-5c70-49ae-ce80-ae2f2e249997"},"source":["# movie id | movie title | release date | video release date | IMDb URL | unknown | Action | Adventure | Animation | Children's | Comedy | Crime | Documentary | Drama | Fantasy | Film-Noir | Horror | Musical | Mystery | Romance | Sci-Fi | Thriller | War | Western\n","\n","movie_col = parse(\"movie id | movie title | release date | video release date | IMDb URL | unknown | Action | Adventure | Animation | Children's | Comedy | Crime | Documentary | Drama | Fantasy | Film-Noir | Horror | Musical | Mystery | Romance | Sci-Fi | Thriller | War | Western\")\n","print(movie_col)\n","movies = pd.read_csv(path_movie, sep='|', names=movie_col, encoding='ISO-8859-1')\n","movies = movies.set_index(movie_col[0])\n","print(movies.shape)\n","display(movies.head(5))"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["['movie_id', 'movie_title', 'release_date', 'video_release_date', 'IMDb_URL', 'unknown', 'Action', 'Adventure', 'Animation', \"Children's\", 'Comedy', 'Crime', 'Documentary', 'Drama', 'Fantasy', 'Film-Noir', 'Horror', 'Musical', 'Mystery', 'Romance', 'Sci-Fi', 'Thriller', 'War', 'Western']\n","(1682, 23)\n"]},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movie_title</th>\n","      <th>release_date</th>\n","      <th>video_release_date</th>\n","      <th>IMDb_URL</th>\n","      <th>unknown</th>\n","      <th>Action</th>\n","      <th>Adventure</th>\n","      <th>Animation</th>\n","      <th>Children's</th>\n","      <th>Comedy</th>\n","      <th>Crime</th>\n","      <th>Documentary</th>\n","      <th>Drama</th>\n","      <th>Fantasy</th>\n","      <th>Film-Noir</th>\n","      <th>Horror</th>\n","      <th>Musical</th>\n","      <th>Mystery</th>\n","      <th>Romance</th>\n","      <th>Sci-Fi</th>\n","      <th>Thriller</th>\n","      <th>War</th>\n","      <th>Western</th>\n","    </tr>\n","    <tr>\n","      <th>movie_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Toy Story (1995)</td>\n","      <td>01-Jan-1995</td>\n","      <td>NaN</td>\n","      <td>http://us.imdb.com/M/title-exact?Toy%20Story%2...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>GoldenEye (1995)</td>\n","      <td>01-Jan-1995</td>\n","      <td>NaN</td>\n","      <td>http://us.imdb.com/M/title-exact?GoldenEye%20(...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Four Rooms (1995)</td>\n","      <td>01-Jan-1995</td>\n","      <td>NaN</td>\n","      <td>http://us.imdb.com/M/title-exact?Four%20Rooms%...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Get Shorty (1995)</td>\n","      <td>01-Jan-1995</td>\n","      <td>NaN</td>\n","      <td>http://us.imdb.com/M/title-exact?Get%20Shorty%...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Copycat (1995)</td>\n","      <td>01-Jan-1995</td>\n","      <td>NaN</td>\n","      <td>http://us.imdb.com/M/title-exact?Copycat%20(1995)</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                movie_title release_date  ...  War Western\n","movie_id                                  ...             \n","1          Toy Story (1995)  01-Jan-1995  ...    0       0\n","2          GoldenEye (1995)  01-Jan-1995  ...    0       0\n","3         Four Rooms (1995)  01-Jan-1995  ...    0       0\n","4         Get Shorty (1995)  01-Jan-1995  ...    0       0\n","5            Copycat (1995)  01-Jan-1995  ...    0       0\n","\n","[5 rows x 23 columns]"]},"metadata":{}}]},{"cell_type":"code","source":["genre = movies.drop(['movie_title', 'release_date', 'video_release_date', 'IMDb_URL'], axis=1)\n","genre"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":492},"id":"LbSPYgjmYvzd","executionInfo":{"status":"ok","timestamp":1639190884559,"user_tz":-540,"elapsed":263,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"961efd8b-2f1f-42b4-e999-804d700e5515"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>unknown</th>\n","      <th>Action</th>\n","      <th>Adventure</th>\n","      <th>Animation</th>\n","      <th>Children's</th>\n","      <th>Comedy</th>\n","      <th>Crime</th>\n","      <th>Documentary</th>\n","      <th>Drama</th>\n","      <th>Fantasy</th>\n","      <th>Film-Noir</th>\n","      <th>Horror</th>\n","      <th>Musical</th>\n","      <th>Mystery</th>\n","      <th>Romance</th>\n","      <th>Sci-Fi</th>\n","      <th>Thriller</th>\n","      <th>War</th>\n","      <th>Western</th>\n","    </tr>\n","    <tr>\n","      <th>movie_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1678</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1679</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1680</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1681</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1682</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1682 rows × 19 columns</p>\n","</div>"],"text/plain":["          unknown  Action  Adventure  Animation  ...  Sci-Fi  Thriller  War  Western\n","movie_id                                         ...                                \n","1               0       0          0          1  ...       0         0    0        0\n","2               0       1          1          0  ...       0         1    0        0\n","3               0       0          0          0  ...       0         1    0        0\n","4               0       1          0          0  ...       0         0    0        0\n","5               0       0          0          0  ...       0         1    0        0\n","...           ...     ...        ...        ...  ...     ...       ...  ...      ...\n","1678            0       0          0          0  ...       0         0    0        0\n","1679            0       0          0          0  ...       0         1    0        0\n","1680            0       0          0          0  ...       0         0    0        0\n","1681            0       0          0          0  ...       0         0    0        0\n","1682            0       0          0          0  ...       0         0    0        0\n","\n","[1682 rows x 19 columns]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"iA0kYUeyOjo9","executionInfo":{"status":"ok","timestamp":1639189460308,"user_tz":-540,"elapsed":311,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"3932e97c-859f-4d3b-b6ca-8a78abc91117"},"source":["# user id | item id | rating | timestamp\n","rating_col = parse('user id | item id | rating | timestamp')\n","print(rating_col)\n","ratings = pd.read_csv(path_rating, sep='\\t', names=rating_col, encoding='ISO-8859-1')\n","ratings = ratings.set_index(rating_col[0])\n","print(ratings.shape)\n","display(ratings.head(5))"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["['user_id', 'item_id', 'rating', 'timestamp']\n","(100000, 3)\n"]},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>item_id</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>196</th>\n","      <td>242</td>\n","      <td>3</td>\n","      <td>881250949</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>302</td>\n","      <td>3</td>\n","      <td>891717742</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>377</td>\n","      <td>1</td>\n","      <td>878887116</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>51</td>\n","      <td>2</td>\n","      <td>880606923</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>346</td>\n","      <td>1</td>\n","      <td>886397596</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         item_id  rating  timestamp\n","user_id                            \n","196          242       3  881250949\n","186          302       3  891717742\n","22           377       1  878887116\n","244           51       2  880606923\n","166          346       1  886397596"]},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"qIOjytwGOnYN","executionInfo":{"status":"ok","timestamp":1639189460308,"user_tz":-540,"elapsed":13,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"9b3ee21b-06e4-4530-c64a-bc921fa3f8c2"},"source":["ratings = ratings.drop('timestamp', axis=1)\n","ratings.rename(columns={'item_id': 'movie_id'}, inplace=True)\n","ratings"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>196</th>\n","      <td>242</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>302</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>377</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>244</th>\n","      <td>51</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>346</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>880</th>\n","      <td>476</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>716</th>\n","      <td>204</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>276</th>\n","      <td>1090</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>225</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>203</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 2 columns</p>\n","</div>"],"text/plain":["         movie_id  rating\n","user_id                  \n","196           242       3\n","186           302       3\n","22            377       1\n","244            51       2\n","166           346       1\n","...           ...     ...\n","880           476       3\n","716           204       5\n","276          1090       1\n","13            225       2\n","12            203       3\n","\n","[100000 rows x 2 columns]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"HuIeHwzkPwde","executionInfo":{"status":"ok","timestamp":1639189460309,"user_tz":-540,"elapsed":12,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":["ratings = ratings.reset_index()"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"-tLLsWULPzlc","executionInfo":{"status":"ok","timestamp":1639189460310,"user_tz":-540,"elapsed":12,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"8ce7f4a2-24fc-4594-9537-14e1e994dd74"},"source":["ratings"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>196</td>\n","      <td>242</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>186</td>\n","      <td>302</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>22</td>\n","      <td>377</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>244</td>\n","      <td>51</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>166</td>\n","      <td>346</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>880</td>\n","      <td>476</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>716</td>\n","      <td>204</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>276</td>\n","      <td>1090</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>13</td>\n","      <td>225</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>12</td>\n","      <td>203</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 3 columns</p>\n","</div>"],"text/plain":["       user_id  movie_id  rating\n","0          196       242       3\n","1          186       302       3\n","2           22       377       1\n","3          244        51       2\n","4          166       346       1\n","...        ...       ...     ...\n","99995      880       476       3\n","99996      716       204       5\n","99997      276      1090       1\n","99998       13       225       2\n","99999       12       203       3\n","\n","[100000 rows x 3 columns]"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["ratings_genre = ratings.merge(genre, on='movie_id')\n","ratings_genre"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"_7DayBCXZD6C","executionInfo":{"status":"ok","timestamp":1639190959353,"user_tz":-540,"elapsed":272,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"ffbbff72-be72-4b8c-90a1-18fec5905fd4"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","      <th>unknown</th>\n","      <th>Action</th>\n","      <th>Adventure</th>\n","      <th>Animation</th>\n","      <th>Children's</th>\n","      <th>Comedy</th>\n","      <th>Crime</th>\n","      <th>Documentary</th>\n","      <th>Drama</th>\n","      <th>Fantasy</th>\n","      <th>Film-Noir</th>\n","      <th>Horror</th>\n","      <th>Musical</th>\n","      <th>Mystery</th>\n","      <th>Romance</th>\n","      <th>Sci-Fi</th>\n","      <th>Thriller</th>\n","      <th>War</th>\n","      <th>Western</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>196</td>\n","      <td>242</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>63</td>\n","      <td>242</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>226</td>\n","      <td>242</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>154</td>\n","      <td>242</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>306</td>\n","      <td>242</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>840</td>\n","      <td>1674</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>655</td>\n","      <td>1640</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>655</td>\n","      <td>1637</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>655</td>\n","      <td>1630</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>655</td>\n","      <td>1641</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 22 columns</p>\n","</div>"],"text/plain":["       user_id  movie_id  rating  unknown  ...  Sci-Fi  Thriller  War  Western\n","0          196       242       3        0  ...       0         0    0        0\n","1           63       242       3        0  ...       0         0    0        0\n","2          226       242       5        0  ...       0         0    0        0\n","3          154       242       3        0  ...       0         0    0        0\n","4          306       242       5        0  ...       0         0    0        0\n","...        ...       ...     ...      ...  ...     ...       ...  ...      ...\n","99995      840      1674       4        0  ...       0         0    0        0\n","99996      655      1640       3        0  ...       0         0    0        0\n","99997      655      1637       3        0  ...       0         0    0        0\n","99998      655      1630       3        0  ...       0         0    0        0\n","99999      655      1641       3        0  ...       0         0    0        0\n","\n","[100000 rows x 22 columns]"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"znEj8Z_SO60Q","executionInfo":{"status":"ok","timestamp":1639189460612,"user_tz":-540,"elapsed":6,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":["user_ids = ratings['user_id'].unique().tolist()\n","movie_ids = ratings['movie_id'].unique().tolist()\n","\n","num_users = len(user_ids)\n","num_movies = len(movie_ids)"],"execution_count":11,"outputs":[]},{"cell_type":"code","source":["movies_genre = len(movie_ids)"],"metadata":{"id":"i89SCZCvZtFC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["num_genre = len(ratings_genre.columns) - 1\n","num_genre"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TcpR939Maa-l","executionInfo":{"status":"ok","timestamp":1639191295452,"user_tz":-540,"elapsed":264,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"1fe65931-d952-43ad-d817-6bdc53bb20e1"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"BO94kMBfPn6I","executionInfo":{"status":"ok","timestamp":1639189460908,"user_tz":-540,"elapsed":301,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":["from sklearn.model_selection import train_test_split\n","\n","# sparse한 값(비어있는 값)들이 많아서 테스트 비율을 줄임\n","train, test = train_test_split(ratings, test_size=0.1)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"-bwoR19TQX4J","executionInfo":{"status":"ok","timestamp":1639191431216,"user_tz":-540,"elapsed":264,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":["from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import Embedding, Flatten, Input, Dropout, Dense, Concatenate\n","\n","# 영화, 사용자의 임베딩 벡터 차원\n","latent_dim = 32\n","\n","movie_input = Input(shape=[1])\n","# 통상적으로 + 1\n","movie_embedding = Embedding(num_movies + 1, latent_dim)(movie_input)\n","movie_vec = Flatten()(movie_embedding)\n","\n","user_input = Input(shape=[1])\n","user_embedding = Embedding(num_users + 1, latent_dim)(user_input)\n","user_vec = Flatten()(user_embedding)\n","\n","genre_input = Input(shape=[num_genre])\n","genre_embedding = Embedding(num_movies + 1, latent_dim)(genre_input)\n","genre_vec = Flatten()(genre_embedding)\n","\n","concat = Concatenate(axis=1)([movie_vec, user_vec, genre_vec])\n","\n","# fc_1 = Dense(128, activation='relu')(concat)\n","# fc_2 = Dense(16, activation='relu')(fc_1)\n","# fc_3 = Dense(1, activation='relu')(fc_2)\n","\n","concat_dropout = Dropout(0.2)(concat)\n","fc_1 = Dense(128, activation='relu')(concat_dropout)\n","fc_1_dropout = Dropout(0.2)(fc_1)\n","fc_2 = Dense(16, activation='relu')(fc_1_dropout)\n","fc_2_dropout = Dropout(0.2)(fc_2)\n","fc_3 = Dense(1, activation='relu')(fc_2_dropout)\n","\n","model = Model([movie_input, user_input, genre_input], fc_3)\n","model.compile(optimizer='adam', loss='mse')"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":953},"id":"W6_7OexOUKvT","executionInfo":{"status":"ok","timestamp":1639191441434,"user_tz":-540,"elapsed":401,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"3215c86d-079c-47a4-d818-b4a8a148c7f1"},"source":["from tensorflow.keras.utils import plot_model\n","\n","plot_model(model)"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"image/png":"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5MmT9tFHH9mvf/1rmzp1qpmZzZs3z4LBoK1Zs8ZOnz5t27dvt+HDh9tVV11lR48erd3P3LlzTZK9/vrrdubMGSspKbFbbrnFOnfubBUVFQ2er6ioyJ5++mn76KOP7OTJkzZq1Cjr1q1b7fjs7GzLzMys89/w/e9/3+Li4mzdunV26tQpe+qppywmJsb+9re/NSpbS8zdVOfPn7ekpCR75JFHmjQ+HA5bY1429u3bZ5Js1KhRjZqH50fLPz9ycnIsJyenwdsD6LAilAUAl9WYslBRUWGpqal266231lleVVVlS5YssbKyMktMTLTJkyfXWf/Xv/7VJNn8+fNrl336hqu8vLx22dKlS02Svffeew2az2XBggUmyUpKSsys/huy8vJyS0hIqJOxrKzM4uLi7MEHH2xwtpaau6nmzp1rX/jCF6y0tLRJ4xtbFrZu3WqS7Ctf+UqDx/D8aJ3nB2UBQANFuAwJQLPavn27Tp8+Xe8a9NjYWD366KPatWuXzp07p5tuuqnO+hEjRigYDGrLli2X3H8wGJQkVVZWNmg+l06dOkn65HIOl71796qsrEyDBw+uXRYfH68ePXrUuRTmctlac+7LeeWVVxSJRPSnP/1JSUlJTd5PYyQmJkpq3PcjeH748/wAgIuhLABoVqWlpZKk1NRU5/rTp09L+r83kp+Vmpqqs2fPNut8kvQf//EfysrKUlpamuLi4vTEE09ccp/nz5+XJP3whz+U53m1j0OHDjX6i8F+zv2pl156Sc8++6zefPNNXXvttU3aR1Nce+21CoVC2rdvX4PH8Pxo/ecHAFwKZQFAs+rVq5ck6cSJE871n75pc73pO336tNLT05t1vvfff1933XWXevTooS1btujMmTNauHDhJfeZlpYmSVq8eLHMrM6jMT8e5ufcn/rFL36hF154QW+88UbtsWotcXFxuuOOO3TixAn95S9/ueh2H330kWbMmCGJ50drPz8A4HIoCwCa1bXXXquuXbvqv/7rv5zrBw8erMTERG3durXO8i1btqiiokI33nhjs863Y8cOVVZW6sEHH1S/fv0UCoXked4l99m7d2+FQiG9/fbbjcoSTXObmQoKCrRjxw6tX7/e+Zf61vD0008rLi5Os2bNUnl5uXObnTt31t5WledH68wNAA1FWQDQrOLi4vTUU0/pz3/+sx555BF98MEHqqmp0dmzZ7V7926FQiHNnj1br7zyil544QWVlpZqx44d+u53v6uePXtq5syZzTpfnz59JEn//d//rY8//lj/+Mc/6l333rVrVx05ckQHDx7U2bNnFRsbq3vvvVdr167VsmXLVFpaqurqahUXF+vDDz9scDY/5969e7eee+45rVy5Up06dapzyYrnefrpT3/a4H1diWHDhun3v/+9du7cqVtuuUX/+Z//qTNnzqiyslL//Oc/tXLlSn3729+uvVaf50frzA0ADdbq36kG0OaokbdONTP75S9/aUOGDLFQKGShUMi++MUv2tKlS83MrKamxgoLC23AgAHWqVMn69Kli9111122d+/e2vFLly61hIQEk2QDBgyw/fv324oVKyw5OdkkWUZGhu3bt69B8xUUFFjXrl0tNTXVcnNz7Ze//KVJsszMTHv//fft73//u2VkZFh8fLyNHTvWjh49ahcuXLCCggLr06ePBQIBS0tLs+zsbNu1a1ejsjX33A21Y8cOk3TRR2FhYaPOp1nj74b0We+//759//vftyFDhlhiYqLFxsZaamqqffGLX7Rvf/vb9pe//KV2W54fLf/84G5IABoo4pmZtWo7AdDmeJ6ncDisSZMm+R0FPopEIsrLyxMvG21fbm6uJKmoqMjnJACiXBGXIQEAAABwoiwAQBuxZ8+eet89cD0mT57sd1QAQDsR8DsAAKBhBg4cyCVAAIBWxScLAAAAAJwoCwAAAACcKAsAAAAAnCgLAAAAAJwoCwAAAACcKAsAAAAAnCgLAAAAAJwoCwAAAACcKAsAAAAAnCgLAAAAAJwoCwAAAACcKAsAAAAAnCgLAAAAAJwoCwAAAACcAn4HANA2LF68WEVFRX7HgI+Ki4slSbm5uT4nwZXavHmzRo0a5XcMAG0AnywAuKycnBylp6f7HQMt7MiRI9qwYcNF16enpysnJ6cVE6GljBo1SqNHj/Y7BoA2wDMz8zsEAMB/kUhEeXl54mUBAPAvRXyyAAAAAMCJsgAAAADAibIAAAAAwImyAAAAAMCJsgAAAADAibIAAAAAwImyAAAAAMCJsgAAAADAibIAAAAAwImyAAAAAMCJsgAAAADAibIAAAAAwImyAAAAAMCJsgAAAADAibIAAAAAwImyAAAAAMCJsgAAAADAibIAAAAAwImyAAAAAMCJsgAAAADAibIAAAAAwImy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19ixY8+5zr///W899thjev/995WXl6dXXnlFCxcuVEVFhbKzs3X99dfrjTfe0LFjx1RdXR22blJSUuiv0Ndee63Wr1+vjo4ObdiwIZQnkvmG20033aRVq1bpiSeekM/n09SpU9XR0aE333xzRHMM5uyTqzo6Oga8N5qOFQBEI8oCgJi2f/9+dXV16dZbb72g9RsaGtTZ2anp06eHLZ8xY4ZSUlLOexPw9OnTlZGREbps5WLnu9QqKytVXV2tLVu2qLOzUwcPHtScOXM0e/ZsNTY2jmiWczl16pTMTD6fb9Bx8X6sACAaURYAxLSmpiZJ0vjx4y9o/RMnTkiSsrKyBryXk5Pj+tfuv0pNTVVra+slm+9SOXLkiNasWaOHHnpIt9xyizIzM5Wfn6+amho1NzerqqpqxLIMZt++fZKkKVOmDDouno8VAEQrygKAmJaWliZJOn369AWtn5OTI0muXwxPnDghv98/6Pq9vb1h4y52vkvpl19+UV9fnyZOnBi23OfzaezYsWpoaBixLIP57LPPJElFRUWDjovnYwUA0YqyACCmTZ06VQkJCdq2bdsFr5+VlTXgR8G++uor9fT06B//+Meg62/dulVmplmzZj8GKYQAAA4QSURBVEU8X1JSknp7ey8o91Cc/bJ75MiRsOUdHR06fvx46BGqXmppadHatWvl9/v1wAMPDDo2no8VAEQrygKAmDZ+/HgVFxervr5eb731loLBoHbt2jXkm1PT0tL01FNP6YMPPtA777yjYDCoH3/8UY888oiuvPJKLVu2LGx8f3+/2tvbdebMGe3atUvLly/XpEmTQo//jGS+wsJCHT9+XJs2bVJvb69aW1tdf/tg7Nixam5u1qFDh9TR0THkL635+fmaP3++ampqtH37dnV3d6uxsTGU4cEHHxzSPJeCmamzs1P9/f0yM7W2tioQCGju3LlKTEzUpk2bznvPQjwfKwCIWp4+jAkAXCjCR6d2dHTY0qVLbdy4cZaVlWXz5s2z1atXmyTz+/32ww8/2Jo1ayw9PT30iM633347tH5/f79VVVXZVVddZcnJyXbZZZfZPffcYz///HPYdpYtW2bJycn297//3ZKSkszn89ndd99tBw4cCBs31Pna2tps/vz5lpaWZvn5+fb444/bypUrTZIVFhaGHvH53XffWV5enqWnp9u8efPCHul5PseO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\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lolMuxKpUgnv","executionInfo":{"status":"ok","timestamp":1639191481425,"user_tz":-540,"elapsed":262,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"d22c5209-25e4-4d82-98ed-e035cea4ee2f"},"source":["model.summary()"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_2\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_6 (InputLayer)           [(None, 1)]          0           []                               \n","                                                                                                  \n"," input_7 (InputLayer)           [(None, 1)]          0           []                               \n","                                                                                                  \n"," input_8 (InputLayer)           [(None, 21)]         0           []                               \n","                                                                                                  \n"," embedding_5 (Embedding)        (None, 1, 32)        53856       ['input_6[0][0]']                \n","                                                                                                  \n"," embedding_6 (Embedding)        (None, 1, 32)        30208       ['input_7[0][0]']                \n","                                                                                                  \n"," embedding_7 (Embedding)        (None, 21, 32)       53856       ['input_8[0][0]']                \n","                                                                                                  \n"," flatten_5 (Flatten)            (None, 32)           0           ['embedding_5[0][0]']            \n","                                                                                                  \n"," flatten_6 (Flatten)            (None, 32)           0           ['embedding_6[0][0]']            \n","                                                                                                  \n"," flatten_7 (Flatten)            (None, 672)          0           ['embedding_7[0][0]']            \n","                                                                                                  \n"," concatenate_2 (Concatenate)    (None, 736)          0           ['flatten_5[0][0]',              \n","                                                                  'flatten_6[0][0]',              \n","                                                                  'flatten_7[0][0]']              \n","                                                                                                  \n"," dropout_6 (Dropout)            (None, 736)          0           ['concatenate_2[0][0]']          \n","                                                                                                  \n"," dense_6 (Dense)                (None, 128)          94336       ['dropout_6[0][0]']              \n","                                                                                                  \n"," dropout_7 (Dropout)            (None, 128)          0           ['dense_6[0][0]']                \n","                                                                                                  \n"," dense_7 (Dense)                (None, 16)           2064        ['dropout_7[0][0]']              \n","                                                                                                  \n"," dropout_8 (Dropout)            (None, 16)           0           ['dense_7[0][0]']                \n","                                                                                                  \n"," dense_8 (Dense)                (None, 1)            17          ['dropout_8[0][0]']              \n","                                                                                                  \n","==================================================================================================\n","Total params: 234,337\n","Trainable params: 234,337\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":624},"id":"CSke1jP0Utj-","executionInfo":{"status":"error","timestamp":1639191447743,"user_tz":-540,"elapsed":260,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"4a7e33f8-ab93-4552-f522-0819d16b2e02"},"source":["history = model.fit([train.movie_id, train.user_id], train.rating, epochs=10, batch_size=32, validation_data=([test.movie_id, test.user_id], test.rating))"],"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-29-fa6facda5645>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmovie_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muser_id\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrating\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmovie_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muser_id\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrating\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/func_graph.py\u001b[0m in \u001b[0;36mautograph_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   1127\u001b[0m           \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint:disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1128\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"ag_error_metadata\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1129\u001b[0;31m               \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mag_error_metadata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1130\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1131\u001b[0m               \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: in user code:\n\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 878, in train_function  *\n        return step_function(self, iterator)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 867, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 860, in run_step  **\n        outputs = model.train_step(data)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\", line 808, in train_step\n        y_pred = self(x, training=True)\n    File \"/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"/usr/local/lib/python3.7/dist-packages/keras/engine/input_spec.py\", line 199, in assert_input_compatibility\n        raise ValueError(f'Layer \"{layer_name}\" expects {len(input_spec)} input(s),'\n\n    ValueError: Layer \"model_2\" expects 3 input(s), but it received 2 input tensors. Inputs received: [<tf.Tensor 'IteratorGetNext:0' shape=(None, 1) dtype=int64>, <tf.Tensor 'IteratorGetNext:1' shape=(None, 1) dtype=int64>]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dIYiv2JaWw84","executionInfo":{"status":"ok","timestamp":1639189670676,"user_tz":-540,"elapsed":701,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"b927e8b7-1b90-4649-b6b8-c93f98be8d3d"},"source":["y_pred = model.predict([test.movie_id, test.user_id])\n","y_true = test.rating\n","\n","from sklearn.metrics import mean_squared_error\n","\n","mean_squared_error(y_true, y_pred, squared=False)"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9312029859347997"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OUEZWz4ua5r9","executionInfo":{"status":"ok","timestamp":1639189670676,"user_tz":-540,"elapsed":11,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"ae6c3959-06f6-4ac2-84bc-2224cbca924b"},"source":["print(y_pred.shape, y_true.shape)"],"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["(10000, 1) (10000,)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8UxPiKHfaZDH","executionInfo":{"status":"ok","timestamp":1639189670677,"user_tz":-540,"elapsed":7,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}},"outputId":"838bf28a-4ad2-4fb7-b91b-5e081b068361"},"source":["pd.DataFrame({'y_pred': y_pred.squeeze(), 'y_true': y_true})"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>y_pred</th>\n","      <th>y_true</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>93591</th>\n","      <td>3.549735</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>33907</th>\n","      <td>4.187989</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>92228</th>\n","      <td>1.714299</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>80569</th>\n","      <td>3.640742</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>87315</th>\n","      <td>4.134895</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24542</th>\n","      <td>3.317163</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>43471</th>\n","      <td>3.711666</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>81738</th>\n","      <td>3.501483</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>73273</th>\n","      <td>3.902520</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6320</th>\n","      <td>3.621298</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 2 columns</p>\n","</div>"],"text/plain":["         y_pred  y_true\n","93591  3.549735       5\n","33907  4.187989       5\n","92228  1.714299       1\n","80569  3.640742       3\n","87315  4.134895       5\n","...         ...     ...\n","24542  3.317163       4\n","43471  3.711666       2\n","81738  3.501483       4\n","73273  3.902520       3\n","6320   3.621298       3\n","\n","[10000 rows x 2 columns]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"0M5z_4Toa2GE","executionInfo":{"status":"ok","timestamp":1639189670677,"user_tz":-540,"elapsed":6,"user":{"displayName":"성규홍","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghk9rKNJUxqcDzJrDDxURxJFCWLgip96DrtsTpfMQ=s64","userId":"14501402683079236729"}}},"source":[""],"execution_count":19,"outputs":[]}]}